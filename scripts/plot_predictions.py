import os
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""
This script visualizes and analyzes binding predictions from the scan_windows.py output.
It performs the following tasks:

1. Loads the binding prediction results from 'binding_predictions.csv'
2. Creates a histogram with density curve showing the distribution of mean binding scores
   across all peptide sequences in the dataset
3. Identifies the top 20 highest-scoring peptides (most likely to bind)
4. Saves visualization outputs:
   - A histogram plot as 'mean_score_distribution.png'
   - A CSV file containing the top scoring peptides as 'top_scoring_peptides.csv'

This analysis helps identify the strongest binding candidates and understand the overall
distribution of binding affinities across the dataset.
"""

# Set up paths
working_dir = os.path.join(os.path.dirname(__file__), '..')
csv_path = os.path.join(working_dir, 'results', 'binding_predictions.csv')

# Load the binding predictions generated by scan_windows.py
df = pd.read_csv(csv_path)

# Create a histogram of mean binding scores with a density curve
# This visualizes the distribution of binding tendencies across all sequences
plt.figure(figsize=(10, 5))  # Set figure size
sns.histplot(df['mean_score'], bins=50, kde=True, color='blue')  # Create histogram with density curve
plt.title("Distribution of Mean Binding Scores")
plt.xlabel("Mean Binding Score")  # X-axis label
plt.ylabel("Count")  # Y-axis label
plt.tight_layout()  # Adjust spacing
plt.savefig(os.path.join(working_dir, 'results', 'mean_score_distribution.png'))
plt.close()  # Close the figure to free memory

# Find and save the top 20 highest-scoring peptides
# These are the most likely to be binding sequences according to the model
top_df = df.sort_values(by='mean_score', ascending=False).head(20)
# Save only the sequence, true label, and mean score columns
top_df[['sequence', 'true_label', 'mean_score']].to_csv(
    os.path.join(working_dir, 'results', 'top_scoring_peptides.csv'), index=False)

# Inform the user that the analysis is complete
print("Saved histogram to 'mean_score_distribution.png'")
print("Saved top 20 peptides to 'top_scoring_peptides.csv'")